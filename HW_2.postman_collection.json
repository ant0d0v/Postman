{
	"info": {
		"_postman_id": "7f94b706-ec13-4558-89aa-ef3c71433f82",
		"name": "Anton HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// var resp = pm.response.json();",
							"",
							"// pm.test(\"Check string in response\", function () {",
							"// pm.expect(resp).to.have.property('This is the first responce from server!');",
							"// }",
							"// );",
							"",
							"",
							"",
							"",
							"pm.test(\"Check age\", function () {",
							"    pm.expect(pm.response.text()).to.include('This is the first responce from server!');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://162.55.220.72:5005/first"
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.",
							"// 2. Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Спарсить response body в json.",
							"",
							"var resp = pm.response.json();",
							"",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)",
							"",
							"pm.test(\"Check name\", function () {",
							"    pm.expect(resp.name).to.eql(\"Liudmyla\");",
							"});",
							"",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)",
							"",
							"pm.test(\"Check age \", function () {",
							"pm.expect(resp.age).to.eql(String(26));",
							"}",
							" );",
							"",
							"",
							"//  6. Проверить, что salary в ответе равно salary s request (salary вбить руками.) ",
							"",
							"pm.test(\"Check salary\", function () {",
							"pm.expect(resp.salary).to.eql(10000);",
							"}",
							" );",
							"",
							"//  7. Спарсить request.",
							"",
							"var req = request.data;",
							"",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"",
							"pm.test(\"Cheking name in the response in the request\", function () {",
							" pm.expect(resp.name).to.eql(req.name);",
							"}",
							");",
							"",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"",
							"pm.test(\"Cheking age in the response in the request\", function () {",
							"pm.expect(resp.age).to.eql(req.age);",
							"}",
							");",
							"",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"",
							"pm.test(\"Cheking salary in the response in the request\", function () {",
							"  pm.expect(req.salary).to.eql(String(resp.salary));",
							"}",
							");",
							"",
							"// 11. Вывести в консоль параметр family из response.",
							"",
							"var jsonData = pm.response.json();",
							"console.log (\"семья =\", jsonData.family)",
							"",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)",
							"",
							"pm.test(\"Cheking u_salary_1_5_year in the response in the request\", function () {",
							"  pm.expect(resp.family.u_salary_1_5_year).to.eql(req.salary * 4);",
							"}",
							");",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Liudmyla",
							"type": "text"
						},
						{
							"key": "age",
							"value": "26",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "10000",
							"type": "text"
						}
					]
				},
				"url": "http://162.55.220.72:5005/user_info_3"
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.\tОтправить запрос.",
							"// 2.\tСтатус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3.\tСпарсить response body в json.",
							"",
							"var jsonData = pm.response.json();",
							"",
							"// 4.\tСпарсить request.",
							"",
							"var req = pm.request.url.query.toObject();",
							"",
							"// 5.\tПроверить, что name в ответе равно name s request (name забрать из request.)",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(jsonData.name).to.eql(req.name);",
							"});",
							"",
							"// 6.\tПроверить, что age в ответе равно age из request (age забрать из request.)",
							"",
							"pm.test(\"Your test name\", function () {",
							"  pm.expect(jsonData.age).to.eql+(req.age);",
							"});",
							"",
							"// 7.\tВывести в консоль параметр salary из request.",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(jsonData.salary).to.eql+(req.salary);",
							"});",
							"",
							"// 8.\tВывести в консоль параметр salary из response.",
							"",
							"console.log(jsonData.salary)",
							"",
							"",
							"// 10.Вывести в консоль 0-й элемент параметра salary из response.",
							"",
							"console.log(jsonData.salary[0])",
							"",
							"// 11.\tВывести в консоль 1-й элемент параметра salary параметр salary из response.",
							"",
							"console.log(jsonData.salary[1])",
							"",
							"// 12.\tВывести в консоль 2-й элемент параметра salary параметр salary из response.",
							"",
							"console.log(jsonData.salary[2])",
							"",
							"// 13.\tПроверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)",
							"",
							"pm.test(\"Your test name\", function () {",
							"  pm.expect(String(jsonData.salary[0])).to.eql(req.salary);",
							" });",
							"",
							"// 14.\tПроверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)",
							"",
							"pm.test(\"Your test name\", function () {",
							"  pm.expect(jsonData.salary[1]).to.eql(String(req.salary * 2));",
							" });",
							"",
							"// 15.\tПроверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)",
							"",
							"pm.test(\"Your test name\", function () {",
							"  pm.expect(jsonData.salary[2]).to.eql(String(req.salary * 3));",
							" });",
							"",
							"// 16.\tСоздать в окружении переменную name",
							"",
							"// 17.\tСоздать в окружении переменную age",
							"",
							"",
							"",
							"// 18.\tСоздать в окружении переменную salary",
							"",
							"",
							"// 19.\tПередать в окружение переменную name",
							"",
							"var jsonData = pm.response.json();",
							"var resp_name = jsonData.name;",
							"console.log(\"Name = \" + resp_name);",
							"pm.environment.set(\"name\", resp_name);",
							"",
							"",
							"// 20.\tПередать в окружение переменную age",
							"var jsonData = pm.response.json();",
							"var resp_age = jsonData.age;",
							"pm.environment.set(\"age\", resp_age);",
							"",
							"",
							"// 21.\tПередать в окружение переменную salary",
							"var jsonData = pm.response.json();",
							"var resp_salary = jsonData.salary[0];",
							"pm.environment.set(\"salary[0]\", resp_salary);",
							"",
							"",
							"// 22.\tНаписать цикл который выведет в консоль по порядку элементы списка из параметра salary.",
							"",
							"var json_resp = pm.response.json();",
							"",
							"console.log(json_resp)",
							"",
							"var salary = json_resp.salary",
							"",
							"console.log(salary)",
							"",
							"for (var i = 0; i< salary.length; i++){",
							"    console.log(\"Salary_\" + i + \":\" + salary[i])",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Liudmyla&age=26&salary=10000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Liudmyla"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.\tОтправить запрос.",
							"",
							"// 2.\tСтатус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3.\tСпарсить response body в json.",
							"",
							"var resp = pm.response.json();",
							"",
							"// 4.\tСпарсить request.",
							"",
							"var req = pm.request.url.query.toObject();",
							"",
							"// или (  let req = +pm.request.url.query.get() ) ",
							"",
							"// 5.\tПроверить, что name в ответе равно name s request (name забрать из request.)",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(resp.name).to.eql(req.name);",
							"});",
							"",
							"",
							"",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"",
							"pm.test(\"Your test age\", function () {",
							"    pm.expect(resp.age).to.eql(req.age);",
							"});",
							"",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"",
							"pm.test(\"Your test salary\", function () {",
							"    pm.expect(resp.salary).to.eql(parseInt(req.salary));",
							"   });",
							"",
							"",
							"",
							"// 8. Вывести в консоль параметр family из response.",
							"",
							"",
							"    console.log(resp.family)",
							"",
							"// 9. Проверить, что у параметра dog есть параметры name.",
							"",
							"pm.test(\"Your test dog name\", function () {",
							"    pm.expect(resp.family.pets.dog).to.have.property('name');",
							"});",
							"",
							"// 10. Проверить, что у параметра dog есть параметры age.",
							"",
							"pm.test(\"Your test dog age\", function () {",
							"    pm.expect(resp.family.pets.dog).to.have.property('age');",
							"});",
							"",
							"// 6.\tПроверить, что параметр name имеет значение Luky.",
							"",
							"pm.test(\"Your test name Luky\", function () {",
							"  pm.expect(resp.family.pets.dog.name).to.eql('Luky');",
							"});",
							"",
							"// 12. Проверить, что параметр age имеет значение 4.",
							"",
							"pm.test(\"Your test dog age\", function () {",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Liudmyla&age=26&salary=10000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Liudmyla"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"// 1.\tВставить параметр salary из окружения в request",
							"// {{name}}",
							"",
							"",
							"// 2.\tВставить параметр age из окружения в age",
							"// {{age}}",
							"",
							"// 3.\tВставить параметр name из окружения в name",
							"// {{salary[0]}}",
							"",
							"// 4.\tОтправить запрос.",
							"",
							"",
							"// 5.\tСтатус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// 6.\tСпарсить response body в json.",
							"",
							"var resp = pm.response.json();",
							"",
							"",
							"// 7.\tСпарсить request.",
							"",
							"var req = request.data;",
							"",
							"",
							"",
							"// 8.\tПроверить, что json response имеет параметр start_qa_salary",
							"",
							"pm.test(\"Your test start_qa_salary\", function () {",
							" pm.expect(resp).to.have.property('start_qa_salary');",
							"});",
							"",
							"// 9.\tПроверить, что json response имеет параметр qa_salary_after_6_months",
							"",
							"pm.test(\"Your test qa_salary_after_6_months\", function () {",
							"pm.expect(resp).to.have.property('qa_salary_after_6_months');",
							"});",
							"",
							"// 10.\tПроверить, что json response имеет параметр qa_salary_after_12_months",
							"",
							"pm.test(\"Your test qa_salary_after_12_months\", function () {",
							"pm.expect(resp).to.have.property('qa_salary_after_12_months');",
							"});",
							"",
							"// 11.\tПроверить, что json response имеет параметр qa_salary_after_1.5_year",
							"",
							"pm.test(\"Your test qa_salary_after_1.5_year\", function () {",
							"pm.expect(resp).to.have.property('qa_salary_after_1.5_year');",
							"});",
							"",
							"// 12.\tПроверить, что json response имеет параметр qa_salary_after_3.5_years",
							"",
							"pm.test(\"Your test qa_salary_after_3.5_years\", function () {",
							"pm.expect(resp).to.have.property('qa_salary_after_3.5_years');",
							"});",
							"",
							"// 13.\tПроверить, что json response имеет параметр person",
							"",
							"pm.test(\"Your test person\", function () {",
							"pm.expect(resp).to.have.property('person');",
							"});",
							"",
							"",
							"// 14.\tПроверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)",
							"",
							"pm.test(\"Check start_qa_salary and salary in request\", function () {",
							"pm.expect(resp.start_qa_salary ).to.eql(parseInt(req.salary));",
							"});",
							"",
							"// 15.\tПроверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)",
							"",
							"pm.test(\"Check qa_salary_after_6_months and salary*2 in request\", function () {",
							"pm.expect(resp.qa_salary_after_6_months).to.eql(parseInt(req.salary * 2));",
							"});",
							"",
							"",
							"// 16.\tПроверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)",
							"",
							"pm.test(\"Check qa_salary_after_12_months and salary*2.7 in request\", function () {",
							"pm.expect(resp.qa_salary_after_12_months).to.eql(parseInt(req.salary * 2.7));",
							"});",
							"",
							"// 17.\tПроверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)",
							"",
							"var a = resp[\"qa_salary_after_1.5_year\"];",
							"pm.test(\"Check qa_salary_after_1.5_years and salary*3.3 in request\", function () {",
							"pm.expect(a).to.eql(req.salary * 3.3);",
							"}",
							");",
							"",
							"// 18.\tПроверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)",
							"",
							"var a = resp[\"qa_salary_after_3.5_years\"];",
							"pm.test(\"Check qa_salary_after_3.5_years and salary*3.8 in request\", function () {",
							"pm.expect(a).to.eql(req.salary * 3.8);",
							"}",
							");",
							"",
							"// 19.\tПроверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)",
							"",
							"pm.test(\"Check u_name and salary in request\", function () {",
							"pm.expect(resp.person.u_name[1]).to.eql(parseInt(req.salary));",
							"}",
							");",
							"",
							"// 20.\tПроверить, что что параметр u_age равен age из request (age забрать из request.) ",
							"",
							"pm.test(\"Check u_age and age in request\", function () {",
							"pm.expect(resp.person.u_age).to.eql(parseInt(req.age));",
							"}",
							");",
							"",
							"",
							"// 21.\tПроверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)",
							"",
							"pm.test(\"Check qa_salary_5_years and salary*4.2 in request\", function () {",
							"pm.expect(resp.person.u_salary_5_years).to.eql(req.salary * 4.2);",
							"}",
							");",
							"",
							"// 22.\t***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.",
							"",
							"var json_resp = pm.response.json();",
							"",
							"console.log(\"JSON = \", json_resp)",
							"",
							"var person = json_resp.person",
							"       console.log(\"Человек = \", person)",
							"var a = person.length",
							"for(i in person) {",
							"console.log(\"Person = \", i + \":\" + person[i]);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary[0]}}",
							"type": "text"
						}
					]
				},
				"url": "http://162.55.220.72:5005/user_info_2\n"
			},
			"response": []
		}
	]
}